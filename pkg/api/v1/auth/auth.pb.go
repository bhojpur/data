// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: pkg/api/v1/auth/auth.proto

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package auth

import (
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Permission represents the ability to perform a given operation on a Resource
type Permission int32

const (
	Permission_PERMISSION_UNKNOWN                         Permission = 0
	Permission_CLUSTER_MODIFY_BINDINGS                    Permission = 100
	Permission_CLUSTER_GET_BINDINGS                       Permission = 101
	Permission_CLUSTER_GET_DATASVR_LOGS                   Permission = 148
	Permission_CLUSTER_AUTH_ACTIVATE                      Permission = 102
	Permission_CLUSTER_AUTH_DEACTIVATE                    Permission = 103
	Permission_CLUSTER_AUTH_GET_CONFIG                    Permission = 104
	Permission_CLUSTER_AUTH_SET_CONFIG                    Permission = 105
	Permission_CLUSTER_AUTH_GET_ROBOT_TOKEN               Permission = 139
	Permission_CLUSTER_AUTH_MODIFY_GROUP_MEMBERS          Permission = 109
	Permission_CLUSTER_AUTH_GET_GROUPS                    Permission = 110
	Permission_CLUSTER_AUTH_GET_GROUP_USERS               Permission = 111
	Permission_CLUSTER_AUTH_EXTRACT_TOKENS                Permission = 112
	Permission_CLUSTER_AUTH_RESTORE_TOKEN                 Permission = 113
	Permission_CLUSTER_AUTH_GET_PERMISSIONS_FOR_PRINCIPAL Permission = 141
	Permission_CLUSTER_AUTH_DELETE_EXPIRED_TOKENS         Permission = 140
	Permission_CLUSTER_AUTH_REVOKE_USER_TOKENS            Permission = 142
	Permission_CLUSTER_AUTH_ROTATE_ROOT_TOKEN             Permission = 147
	Permission_CLUSTER_ENTERPRISE_ACTIVATE                Permission = 114
	Permission_CLUSTER_ENTERPRISE_HEARTBEAT               Permission = 115
	Permission_CLUSTER_ENTERPRISE_GET_CODE                Permission = 116
	Permission_CLUSTER_ENTERPRISE_DEACTIVATE              Permission = 117
	Permission_CLUSTER_ENTERPRISE_PAUSE                   Permission = 149
	Permission_CLUSTER_IDENTITY_SET_CONFIG                Permission = 118
	Permission_CLUSTER_IDENTITY_GET_CONFIG                Permission = 119
	Permission_CLUSTER_IDENTITY_CREATE_IDP                Permission = 120
	Permission_CLUSTER_IDENTITY_UPDATE_IDP                Permission = 121
	Permission_CLUSTER_IDENTITY_LIST_IDPS                 Permission = 122
	Permission_CLUSTER_IDENTITY_GET_IDP                   Permission = 123
	Permission_CLUSTER_IDENTITY_DELETE_IDP                Permission = 124
	Permission_CLUSTER_IDENTITY_CREATE_OIDC_CLIENT        Permission = 125
	Permission_CLUSTER_IDENTITY_UPDATE_OIDC_CLIENT        Permission = 126
	Permission_CLUSTER_IDENTITY_LIST_OIDC_CLIENTS         Permission = 127
	Permission_CLUSTER_IDENTITY_GET_OIDC_CLIENT           Permission = 128
	Permission_CLUSTER_IDENTITY_DELETE_OIDC_CLIENT        Permission = 129
	Permission_CLUSTER_DEBUG_DUMP                         Permission = 131
	Permission_CLUSTER_LICENSE_ACTIVATE                   Permission = 132
	Permission_CLUSTER_LICENSE_GET_CODE                   Permission = 133
	Permission_CLUSTER_LICENSE_ADD_CLUSTER                Permission = 134
	Permission_CLUSTER_LICENSE_UPDATE_CLUSTER             Permission = 135
	Permission_CLUSTER_LICENSE_DELETE_CLUSTER             Permission = 136
	Permission_CLUSTER_LICENSE_LIST_CLUSTERS              Permission = 137
	// TODO: Make k8s secrets into nouns and add an Update RPC
	Permission_CLUSTER_CREATE_SECRET       Permission = 143
	Permission_CLUSTER_LIST_SECRETS        Permission = 144
	Permission_SECRET_DELETE               Permission = 145
	Permission_SECRET_INSPECT              Permission = 146
	Permission_CLUSTER_DELETE_ALL          Permission = 138
	Permission_REPO_READ                   Permission = 200
	Permission_REPO_WRITE                  Permission = 201
	Permission_REPO_MODIFY_BINDINGS        Permission = 202
	Permission_REPO_DELETE                 Permission = 203
	Permission_REPO_INSPECT_COMMIT         Permission = 204
	Permission_REPO_LIST_COMMIT            Permission = 205
	Permission_REPO_DELETE_COMMIT          Permission = 206
	Permission_REPO_CREATE_BRANCH          Permission = 207
	Permission_REPO_LIST_BRANCH            Permission = 208
	Permission_REPO_DELETE_BRANCH          Permission = 209
	Permission_REPO_INSPECT_FILE           Permission = 210
	Permission_REPO_LIST_FILE              Permission = 211
	Permission_REPO_ADD_PIPELINE_READER    Permission = 212
	Permission_REPO_REMOVE_PIPELINE_READER Permission = 213
	Permission_REPO_ADD_PIPELINE_WRITER    Permission = 214
	Permission_PIPELINE_LIST_JOB           Permission = 301
)

// Enum value maps for Permission.
var (
	Permission_name = map[int32]string{
		0:   "PERMISSION_UNKNOWN",
		100: "CLUSTER_MODIFY_BINDINGS",
		101: "CLUSTER_GET_BINDINGS",
		148: "CLUSTER_GET_DATASVR_LOGS",
		102: "CLUSTER_AUTH_ACTIVATE",
		103: "CLUSTER_AUTH_DEACTIVATE",
		104: "CLUSTER_AUTH_GET_CONFIG",
		105: "CLUSTER_AUTH_SET_CONFIG",
		139: "CLUSTER_AUTH_GET_ROBOT_TOKEN",
		109: "CLUSTER_AUTH_MODIFY_GROUP_MEMBERS",
		110: "CLUSTER_AUTH_GET_GROUPS",
		111: "CLUSTER_AUTH_GET_GROUP_USERS",
		112: "CLUSTER_AUTH_EXTRACT_TOKENS",
		113: "CLUSTER_AUTH_RESTORE_TOKEN",
		141: "CLUSTER_AUTH_GET_PERMISSIONS_FOR_PRINCIPAL",
		140: "CLUSTER_AUTH_DELETE_EXPIRED_TOKENS",
		142: "CLUSTER_AUTH_REVOKE_USER_TOKENS",
		147: "CLUSTER_AUTH_ROTATE_ROOT_TOKEN",
		114: "CLUSTER_ENTERPRISE_ACTIVATE",
		115: "CLUSTER_ENTERPRISE_HEARTBEAT",
		116: "CLUSTER_ENTERPRISE_GET_CODE",
		117: "CLUSTER_ENTERPRISE_DEACTIVATE",
		149: "CLUSTER_ENTERPRISE_PAUSE",
		118: "CLUSTER_IDENTITY_SET_CONFIG",
		119: "CLUSTER_IDENTITY_GET_CONFIG",
		120: "CLUSTER_IDENTITY_CREATE_IDP",
		121: "CLUSTER_IDENTITY_UPDATE_IDP",
		122: "CLUSTER_IDENTITY_LIST_IDPS",
		123: "CLUSTER_IDENTITY_GET_IDP",
		124: "CLUSTER_IDENTITY_DELETE_IDP",
		125: "CLUSTER_IDENTITY_CREATE_OIDC_CLIENT",
		126: "CLUSTER_IDENTITY_UPDATE_OIDC_CLIENT",
		127: "CLUSTER_IDENTITY_LIST_OIDC_CLIENTS",
		128: "CLUSTER_IDENTITY_GET_OIDC_CLIENT",
		129: "CLUSTER_IDENTITY_DELETE_OIDC_CLIENT",
		131: "CLUSTER_DEBUG_DUMP",
		132: "CLUSTER_LICENSE_ACTIVATE",
		133: "CLUSTER_LICENSE_GET_CODE",
		134: "CLUSTER_LICENSE_ADD_CLUSTER",
		135: "CLUSTER_LICENSE_UPDATE_CLUSTER",
		136: "CLUSTER_LICENSE_DELETE_CLUSTER",
		137: "CLUSTER_LICENSE_LIST_CLUSTERS",
		143: "CLUSTER_CREATE_SECRET",
		144: "CLUSTER_LIST_SECRETS",
		145: "SECRET_DELETE",
		146: "SECRET_INSPECT",
		138: "CLUSTER_DELETE_ALL",
		200: "REPO_READ",
		201: "REPO_WRITE",
		202: "REPO_MODIFY_BINDINGS",
		203: "REPO_DELETE",
		204: "REPO_INSPECT_COMMIT",
		205: "REPO_LIST_COMMIT",
		206: "REPO_DELETE_COMMIT",
		207: "REPO_CREATE_BRANCH",
		208: "REPO_LIST_BRANCH",
		209: "REPO_DELETE_BRANCH",
		210: "REPO_INSPECT_FILE",
		211: "REPO_LIST_FILE",
		212: "REPO_ADD_PIPELINE_READER",
		213: "REPO_REMOVE_PIPELINE_READER",
		214: "REPO_ADD_PIPELINE_WRITER",
		301: "PIPELINE_LIST_JOB",
	}
	Permission_value = map[string]int32{
		"PERMISSION_UNKNOWN":                         0,
		"CLUSTER_MODIFY_BINDINGS":                    100,
		"CLUSTER_GET_BINDINGS":                       101,
		"CLUSTER_GET_DATASVR_LOGS":                   148,
		"CLUSTER_AUTH_ACTIVATE":                      102,
		"CLUSTER_AUTH_DEACTIVATE":                    103,
		"CLUSTER_AUTH_GET_CONFIG":                    104,
		"CLUSTER_AUTH_SET_CONFIG":                    105,
		"CLUSTER_AUTH_GET_ROBOT_TOKEN":               139,
		"CLUSTER_AUTH_MODIFY_GROUP_MEMBERS":          109,
		"CLUSTER_AUTH_GET_GROUPS":                    110,
		"CLUSTER_AUTH_GET_GROUP_USERS":               111,
		"CLUSTER_AUTH_EXTRACT_TOKENS":                112,
		"CLUSTER_AUTH_RESTORE_TOKEN":                 113,
		"CLUSTER_AUTH_GET_PERMISSIONS_FOR_PRINCIPAL": 141,
		"CLUSTER_AUTH_DELETE_EXPIRED_TOKENS":         140,
		"CLUSTER_AUTH_REVOKE_USER_TOKENS":            142,
		"CLUSTER_AUTH_ROTATE_ROOT_TOKEN":             147,
		"CLUSTER_ENTERPRISE_ACTIVATE":                114,
		"CLUSTER_ENTERPRISE_HEARTBEAT":               115,
		"CLUSTER_ENTERPRISE_GET_CODE":                116,
		"CLUSTER_ENTERPRISE_DEACTIVATE":              117,
		"CLUSTER_ENTERPRISE_PAUSE":                   149,
		"CLUSTER_IDENTITY_SET_CONFIG":                118,
		"CLUSTER_IDENTITY_GET_CONFIG":                119,
		"CLUSTER_IDENTITY_CREATE_IDP":                120,
		"CLUSTER_IDENTITY_UPDATE_IDP":                121,
		"CLUSTER_IDENTITY_LIST_IDPS":                 122,
		"CLUSTER_IDENTITY_GET_IDP":                   123,
		"CLUSTER_IDENTITY_DELETE_IDP":                124,
		"CLUSTER_IDENTITY_CREATE_OIDC_CLIENT":        125,
		"CLUSTER_IDENTITY_UPDATE_OIDC_CLIENT":        126,
		"CLUSTER_IDENTITY_LIST_OIDC_CLIENTS":         127,
		"CLUSTER_IDENTITY_GET_OIDC_CLIENT":           128,
		"CLUSTER_IDENTITY_DELETE_OIDC_CLIENT":        129,
		"CLUSTER_DEBUG_DUMP":                         131,
		"CLUSTER_LICENSE_ACTIVATE":                   132,
		"CLUSTER_LICENSE_GET_CODE":                   133,
		"CLUSTER_LICENSE_ADD_CLUSTER":                134,
		"CLUSTER_LICENSE_UPDATE_CLUSTER":             135,
		"CLUSTER_LICENSE_DELETE_CLUSTER":             136,
		"CLUSTER_LICENSE_LIST_CLUSTERS":              137,
		"CLUSTER_CREATE_SECRET":                      143,
		"CLUSTER_LIST_SECRETS":                       144,
		"SECRET_DELETE":                              145,
		"SECRET_INSPECT":                             146,
		"CLUSTER_DELETE_ALL":                         138,
		"REPO_READ":                                  200,
		"REPO_WRITE":                                 201,
		"REPO_MODIFY_BINDINGS":                       202,
		"REPO_DELETE":                                203,
		"REPO_INSPECT_COMMIT":                        204,
		"REPO_LIST_COMMIT":                           205,
		"REPO_DELETE_COMMIT":                         206,
		"REPO_CREATE_BRANCH":                         207,
		"REPO_LIST_BRANCH":                           208,
		"REPO_DELETE_BRANCH":                         209,
		"REPO_INSPECT_FILE":                          210,
		"REPO_LIST_FILE":                             211,
		"REPO_ADD_PIPELINE_READER":                   212,
		"REPO_REMOVE_PIPELINE_READER":                213,
		"REPO_ADD_PIPELINE_WRITER":                   214,
		"PIPELINE_LIST_JOB":                          301,
	}
)

func (x Permission) Enum() *Permission {
	p := new(Permission)
	*p = x
	return p
}

func (x Permission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Permission) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_v1_auth_auth_proto_enumTypes[0].Descriptor()
}

func (Permission) Type() protoreflect.EnumType {
	return &file_pkg_api_v1_auth_auth_proto_enumTypes[0]
}

func (x Permission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Permission.Descriptor instead.
func (Permission) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{0}
}

// ResourceType represents the type of a Resource
type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_UNKNOWN ResourceType = 0
	ResourceType_CLUSTER               ResourceType = 1
	ResourceType_REPO                  ResourceType = 2
	ResourceType_SPEC_REPO             ResourceType = 3
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_UNKNOWN",
		1: "CLUSTER",
		2: "REPO",
		3: "SPEC_REPO",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNKNOWN": 0,
		"CLUSTER":               1,
		"REPO":                  2,
		"SPEC_REPO":             3,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_v1_auth_auth_proto_enumTypes[1].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_pkg_api_v1_auth_auth_proto_enumTypes[1]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{1}
}

// ActivateRequest enables authentication on the cluster. It issues an auth token
// with no expiration for the irrevocable admin user `data:root`.
type ActivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If set, this token is used as the root user login token. Otherwise the root token
	// is randomly generated and returned in the response.
	RootToken string `protobuf:"bytes,1,opt,name=root_token,json=rootToken,proto3" json:"root_token,omitempty"`
}

func (x *ActivateRequest) Reset() {
	*x = ActivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateRequest) ProtoMessage() {}

func (x *ActivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateRequest.ProtoReflect.Descriptor instead.
func (*ActivateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{0}
}

func (x *ActivateRequest) GetRootToken() string {
	if x != nil {
		return x.RootToken
	}
	return ""
}

type ActivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// data_token authenticates the caller with Bhojpur Data (if you want to perform
	// Bhojpur Data operations after auth has been activated as themselves, you must
	// present this token along with your regular request)
	DataToken string `protobuf:"bytes,1,opt,name=data_token,json=dataToken,proto3" json:"data_token,omitempty"`
}

func (x *ActivateResponse) Reset() {
	*x = ActivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateResponse) ProtoMessage() {}

func (x *ActivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateResponse.ProtoReflect.Descriptor instead.
func (*ActivateResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{1}
}

func (x *ActivateResponse) GetDataToken() string {
	if x != nil {
		return x.DataToken
	}
	return ""
}

type DeactivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeactivateRequest) Reset() {
	*x = DeactivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateRequest) ProtoMessage() {}

func (x *DeactivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateRequest.ProtoReflect.Descriptor instead.
func (*DeactivateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{2}
}

type DeactivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeactivateResponse) Reset() {
	*x = DeactivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateResponse) ProtoMessage() {}

func (x *DeactivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateResponse.ProtoReflect.Descriptor instead.
func (*DeactivateResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{3}
}

type RotateRootTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// root_token is used as the new root token value. If it's unset, then a token will be auto-generated.
	RootToken string `protobuf:"bytes,1,opt,name=root_token,json=rootToken,proto3" json:"root_token,omitempty"`
}

func (x *RotateRootTokenRequest) Reset() {
	*x = RotateRootTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotateRootTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateRootTokenRequest) ProtoMessage() {}

func (x *RotateRootTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateRootTokenRequest.ProtoReflect.Descriptor instead.
func (*RotateRootTokenRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{4}
}

func (x *RotateRootTokenRequest) GetRootToken() string {
	if x != nil {
		return x.RootToken
	}
	return ""
}

type RotateRootTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootToken string `protobuf:"bytes,1,opt,name=root_token,json=rootToken,proto3" json:"root_token,omitempty"`
}

func (x *RotateRootTokenResponse) Reset() {
	*x = RotateRootTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotateRootTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateRootTokenResponse) ProtoMessage() {}

func (x *RotateRootTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateRootTokenResponse.ProtoReflect.Descriptor instead.
func (*RotateRootTokenResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{5}
}

func (x *RotateRootTokenResponse) GetRootToken() string {
	if x != nil {
		return x.RootToken
	}
	return ""
}

// Configure Bhojpur Data's auth system with an OIDC provider
type OIDCConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issuer               string   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         string   `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	RedirectUri          string   `protobuf:"bytes,4,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Scopes               []string `protobuf:"bytes,5,rep,name=scopes,proto3" json:"scopes,omitempty"`
	RequireEmailVerified bool     `protobuf:"varint,6,opt,name=require_email_verified,json=requireEmailVerified,proto3" json:"require_email_verified,omitempty"`
	// localhost_issuer ignores the contents of the issuer claim and makes all
	// OIDC requests to the embedded OIDC provider. This is necessary to support
	// some network configurations like Minikube.
	LocalhostIssuer bool `protobuf:"varint,7,opt,name=localhost_issuer,json=localhostIssuer,proto3" json:"localhost_issuer,omitempty"`
	// user_accessible_issuer_host can be set to override the host used
	// in the OAuth2 authorization URL in case the OIDC issuer isn't
	// accessible outside the cluster. This is necessary to support
	// some configurations like Minikube.
	UserAccessibleIssuerHost string `protobuf:"bytes,8,opt,name=user_accessible_issuer_host,json=userAccessibleIssuerHost,proto3" json:"user_accessible_issuer_host,omitempty"`
}

func (x *OIDCConfig) Reset() {
	*x = OIDCConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDCConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDCConfig) ProtoMessage() {}

func (x *OIDCConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDCConfig.ProtoReflect.Descriptor instead.
func (*OIDCConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{6}
}

func (x *OIDCConfig) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *OIDCConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OIDCConfig) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OIDCConfig) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *OIDCConfig) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *OIDCConfig) GetRequireEmailVerified() bool {
	if x != nil {
		return x.RequireEmailVerified
	}
	return false
}

func (x *OIDCConfig) GetLocalhostIssuer() bool {
	if x != nil {
		return x.LocalhostIssuer
	}
	return false
}

func (x *OIDCConfig) GetUserAccessibleIssuerHost() string {
	if x != nil {
		return x.UserAccessibleIssuerHost
	}
	return ""
}

type GetConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigurationRequest) Reset() {
	*x = GetConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationRequest) ProtoMessage() {}

func (x *GetConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{7}
}

type GetConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *OIDCConfig `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *GetConfigurationResponse) Reset() {
	*x = GetConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationResponse) ProtoMessage() {}

func (x *GetConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{8}
}

func (x *GetConfigurationResponse) GetConfiguration() *OIDCConfig {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type SetConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *OIDCConfig `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *SetConfigurationRequest) Reset() {
	*x = SetConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigurationRequest) ProtoMessage() {}

func (x *SetConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigurationRequest.ProtoReflect.Descriptor instead.
func (*SetConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{9}
}

func (x *SetConfigurationRequest) GetConfiguration() *OIDCConfig {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type SetConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConfigurationResponse) Reset() {
	*x = SetConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigurationResponse) ProtoMessage() {}

func (x *SetConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigurationResponse.ProtoReflect.Descriptor instead.
func (*SetConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{10}
}

// TokenInfo is the 'value' of an auth token 'key' in the 'tokens' collection
type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subject (i.e. Bhojpur Data account) that a given token authorizes.
	// See the note at the top of the doc for an explanation of subject structure.
	Subject     string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Expiration  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	HashedToken string                 `protobuf:"bytes,3,opt,name=hashed_token,json=hashedToken,proto3" json:"hashed_token,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{11}
}

func (x *TokenInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TokenInfo) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *TokenInfo) GetHashedToken() string {
	if x != nil {
		return x.HashedToken
	}
	return ""
}

type AuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the session state that Bhojpur Data creates in order to keep track of
	// information related to the current OIDC session.
	OidcState string `protobuf:"bytes,1,opt,name=oidc_state,json=oidcState,proto3" json:"oidc_state,omitempty"`
	// This is an ID Token issued by the OIDC provider.
	IdToken string `protobuf:"bytes,2,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{12}
}

func (x *AuthenticateRequest) GetOidcState() string {
	if x != nil {
		return x.OidcState
	}
	return ""
}

func (x *AuthenticateRequest) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

type AuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// data_token authenticates the caller with Bhojpur Data (if you want to perform
	// Bhojpur Data operations after auth has been activated as themselves, you must
	// present this token along with your regular request)
	DataToken string `protobuf:"bytes,1,opt,name=data_token,json=dataToken,proto3" json:"data_token,omitempty"`
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{13}
}

func (x *AuthenticateResponse) GetDataToken() string {
	if x != nil {
		return x.DataToken
	}
	return ""
}

type WhoAmIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhoAmIRequest) Reset() {
	*x = WhoAmIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoAmIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIRequest) ProtoMessage() {}

func (x *WhoAmIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIRequest.ProtoReflect.Descriptor instead.
func (*WhoAmIRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{14}
}

type WhoAmIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username   string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Expiration *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *WhoAmIResponse) Reset() {
	*x = WhoAmIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoAmIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIResponse) ProtoMessage() {}

func (x *WhoAmIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIResponse.ProtoReflect.Descriptor instead.
func (*WhoAmIResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{15}
}

func (x *WhoAmIResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WhoAmIResponse) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type GetRolesForPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission Permission `protobuf:"varint,1,opt,name=permission,proto3,enum=v1.auth.Permission" json:"permission,omitempty"`
}

func (x *GetRolesForPermissionRequest) Reset() {
	*x = GetRolesForPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesForPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesForPermissionRequest) ProtoMessage() {}

func (x *GetRolesForPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesForPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetRolesForPermissionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{16}
}

func (x *GetRolesForPermissionRequest) GetPermission() Permission {
	if x != nil {
		return x.Permission
	}
	return Permission_PERMISSION_UNKNOWN
}

type GetRolesForPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GetRolesForPermissionResponse) Reset() {
	*x = GetRolesForPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesForPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesForPermissionResponse) ProtoMessage() {}

func (x *GetRolesForPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesForPermissionResponse.ProtoReflect.Descriptor instead.
func (*GetRolesForPermissionResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{17}
}

func (x *GetRolesForPermissionResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// Roles represents the set of roles a principal has
type Roles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles map[string]bool `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Roles) Reset() {
	*x = Roles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Roles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Roles) ProtoMessage() {}

func (x *Roles) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Roles.ProtoReflect.Descriptor instead.
func (*Roles) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{18}
}

func (x *Roles) GetRoles() map[string]bool {
	if x != nil {
		return x.Roles
	}
	return nil
}

// RoleBinding represents the set of roles principals have on a given Resource
type RoleBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// principal -> roles. All principal names include the structured prefix indicating their type.
	Entries map[string]*Roles `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RoleBinding) Reset() {
	*x = RoleBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBinding) ProtoMessage() {}

func (x *RoleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBinding.ProtoReflect.Descriptor instead.
func (*RoleBinding) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{19}
}

func (x *RoleBinding) GetEntries() map[string]*Roles {
	if x != nil {
		return x.Entries
	}
	return nil
}

// Resource represents any resource that has role-bindings in the system
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ResourceType `protobuf:"varint,1,opt,name=type,proto3,enum=v1.auth.ResourceType" json:"type,omitempty"`
	Name string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{20}
}

func (x *Resource) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_RESOURCE_TYPE_UNKNOWN
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usernames map[string]bool `protobuf:"bytes,1,rep,name=usernames,proto3" json:"usernames,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{21}
}

func (x *Users) GetUsernames() map[string]bool {
	if x != nil {
		return x.Usernames
	}
	return nil
}

type Groups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups map[string]bool `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Groups) Reset() {
	*x = Groups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Groups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Groups) ProtoMessage() {}

func (x *Groups) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Groups.ProtoReflect.Descriptor instead.
func (*Groups) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{22}
}

func (x *Groups) GetGroups() map[string]bool {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Permissions   []Permission   `protobuf:"varint,2,rep,packed,name=permissions,proto3,enum=v1.auth.Permission" json:"permissions,omitempty"`
	ResourceTypes []ResourceType `protobuf:"varint,3,rep,packed,name=resource_types,json=resourceTypes,proto3,enum=v1.auth.ResourceType" json:"resource_types,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{23}
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetPermissions() []Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Role) GetResourceTypes() []ResourceType {
	if x != nil {
		return x.ResourceTypes
	}
	return nil
}

type AuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// permissions are the operations the caller is attempting to perform
	Permissions []Permission `protobuf:"varint,2,rep,packed,name=permissions,proto3,enum=v1.auth.Permission" json:"permissions,omitempty"`
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{24}
}

func (x *AuthorizeRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *AuthorizeRequest) GetPermissions() []Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type AuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authorized is true if the caller has the require permissions
	Authorized bool `protobuf:"varint,1,opt,name=authorized,proto3" json:"authorized,omitempty"`
	// satisfied is the set of permission that the principal has
	Satisfied []Permission `protobuf:"varint,2,rep,packed,name=satisfied,proto3,enum=v1.auth.Permission" json:"satisfied,omitempty"`
	// missing is the set of permissions that the principal lacks
	Missing []Permission `protobuf:"varint,3,rep,packed,name=missing,proto3,enum=v1.auth.Permission" json:"missing,omitempty"`
	// principal is the principal the request was evaluated for
	Principal string `protobuf:"bytes,4,opt,name=principal,proto3" json:"principal,omitempty"`
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{25}
}

func (x *AuthorizeResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *AuthorizeResponse) GetSatisfied() []Permission {
	if x != nil {
		return x.Satisfied
	}
	return nil
}

func (x *AuthorizeResponse) GetMissing() []Permission {
	if x != nil {
		return x.Missing
	}
	return nil
}

func (x *AuthorizeResponse) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

// GetPermissions evaluates the current user's permissions on a resource
type GetPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetPermissionsRequest) Reset() {
	*x = GetPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsRequest) ProtoMessage() {}

func (x *GetPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{26}
}

func (x *GetPermissionsRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

// GetPermissionsForPrincipal evaluates an arbitrary principal's permissions
// on a resource
type GetPermissionsForPrincipalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource  *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Principal string    `protobuf:"bytes,2,opt,name=principal,proto3" json:"principal,omitempty"`
}

func (x *GetPermissionsForPrincipalRequest) Reset() {
	*x = GetPermissionsForPrincipalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsForPrincipalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsForPrincipalRequest) ProtoMessage() {}

func (x *GetPermissionsForPrincipalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsForPrincipalRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionsForPrincipalRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{27}
}

func (x *GetPermissionsForPrincipalRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GetPermissionsForPrincipalRequest) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

type GetPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// permissions is the set of permissions the principal has
	Permissions []Permission `protobuf:"varint,1,rep,packed,name=permissions,proto3,enum=v1.auth.Permission" json:"permissions,omitempty"`
	// roles is the set of roles the principal has
	Roles []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GetPermissionsResponse) Reset() {
	*x = GetPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsResponse) ProtoMessage() {}

func (x *GetPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{28}
}

func (x *GetPermissionsResponse) GetPermissions() []Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *GetPermissionsResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type ModifyRoleBindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource is the resource to modify the role bindings on
	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// principal is the principal to modify the roles binding for
	Principal string `protobuf:"bytes,2,opt,name=principal,proto3" json:"principal,omitempty"`
	// roles is the set of roles for principal - an empty list
	// removes all role bindings
	Roles []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ModifyRoleBindingRequest) Reset() {
	*x = ModifyRoleBindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyRoleBindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyRoleBindingRequest) ProtoMessage() {}

func (x *ModifyRoleBindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyRoleBindingRequest.ProtoReflect.Descriptor instead.
func (*ModifyRoleBindingRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{29}
}

func (x *ModifyRoleBindingRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ModifyRoleBindingRequest) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

func (x *ModifyRoleBindingRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type ModifyRoleBindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyRoleBindingResponse) Reset() {
	*x = ModifyRoleBindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyRoleBindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyRoleBindingResponse) ProtoMessage() {}

func (x *ModifyRoleBindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyRoleBindingResponse.ProtoReflect.Descriptor instead.
func (*ModifyRoleBindingResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{30}
}

type GetRoleBindingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetRoleBindingRequest) Reset() {
	*x = GetRoleBindingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleBindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleBindingRequest) ProtoMessage() {}

func (x *GetRoleBindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleBindingRequest.ProtoReflect.Descriptor instead.
func (*GetRoleBindingRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{31}
}

func (x *GetRoleBindingRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetRoleBindingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binding *RoleBinding `protobuf:"bytes,1,opt,name=binding,proto3" json:"binding,omitempty"`
}

func (x *GetRoleBindingResponse) Reset() {
	*x = GetRoleBindingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleBindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleBindingResponse) ProtoMessage() {}

func (x *GetRoleBindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleBindingResponse.ProtoReflect.Descriptor instead.
func (*GetRoleBindingResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{32}
}

func (x *GetRoleBindingResponse) GetBinding() *RoleBinding {
	if x != nil {
		return x.Binding
	}
	return nil
}

// SessionInfo stores information associated with one OIDC authentication
// session (i.e. a single instance of a single user logging in). Sessions are
// short-lived and stored in the 'oidc-authns' collection, keyed by the OIDC
// 'state' token (30-character CSPRNG-generated string). 'GetOIDCLogin'
// generates and inserts entries, then /authorization-code/callback retrieves
// an access token from the ID provider and uses it to retrive the caller's
// email and store it in 'email', and finally Authorize() returns a Bhojpur Data
// token identified with that email address as a subject in Bhojpur Data.
type SessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// nonce is used by /authorization-code/callback to validate session
	// continuity with the IdP after a user has arrived there from GetOIDCLogin().
	// This is a 30-character CSPRNG-generated string.
	Nonce string `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// email contains the email adddress associated with a user in their OIDC ID
	// provider. Currently users are identified with their email address rather
	// than their OIDC subject identifier to make switching between OIDC ID
	// providers easier for users, and to make user identities more easily
	// comprehensible in Bhojpur Data. The OIDC spec doesn't require that users'
	// emails be present or unique, but we think this will be preferable in
	// practice.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// conversion_err indicates whether an error was encountered while exchanging
	// an auth code for an access token, or while obtaining a user's email (in
	// /authorization-code/callback). Storing the error state here allows any
	// sibling calls to Authenticate() (i.e. using the same OIDC state token) to
	// notify their caller that an error has occurred. We avoid passing the caller
	// any details of the error (which are logged by Bhojpur Data) to avoid giving
	// information to a user who has network access to Bhojpur Data but not an
	// account in the OIDC provider.
	ConversionErr bool `protobuf:"varint,3,opt,name=conversion_err,json=conversionErr,proto3" json:"conversion_err,omitempty"`
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{33}
}

func (x *SessionInfo) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *SessionInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SessionInfo) GetConversionErr() bool {
	if x != nil {
		return x.ConversionErr
	}
	return false
}

type GetOIDCLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOIDCLoginRequest) Reset() {
	*x = GetOIDCLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOIDCLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOIDCLoginRequest) ProtoMessage() {}

func (x *GetOIDCLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOIDCLoginRequest.ProtoReflect.Descriptor instead.
func (*GetOIDCLoginRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{34}
}

type GetOIDCLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The login URL generated for the OIDC object
	LoginUrl string `protobuf:"bytes,1,opt,name=login_url,json=loginUrl,proto3" json:"login_url,omitempty"`
	State    string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GetOIDCLoginResponse) Reset() {
	*x = GetOIDCLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOIDCLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOIDCLoginResponse) ProtoMessage() {}

func (x *GetOIDCLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOIDCLoginResponse.ProtoReflect.Descriptor instead.
func (*GetOIDCLoginResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{35}
}

func (x *GetOIDCLoginResponse) GetLoginUrl() string {
	if x != nil {
		return x.LoginUrl
	}
	return ""
}

func (x *GetOIDCLoginResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type GetRobotTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The returned token will allow the caller to access resources as this
	// robot user
	Robot string `protobuf:"bytes,1,opt,name=robot,proto3" json:"robot,omitempty"`
	// ttl indicates the requested (approximate) remaining lifetime of this token,
	// in seconds
	Ttl int64 `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *GetRobotTokenRequest) Reset() {
	*x = GetRobotTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRobotTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRobotTokenRequest) ProtoMessage() {}

func (x *GetRobotTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRobotTokenRequest.ProtoReflect.Descriptor instead.
func (*GetRobotTokenRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{36}
}

func (x *GetRobotTokenRequest) GetRobot() string {
	if x != nil {
		return x.Robot
	}
	return ""
}

func (x *GetRobotTokenRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type GetRobotTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A new auth token for the requested robot
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetRobotTokenResponse) Reset() {
	*x = GetRobotTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRobotTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRobotTokenResponse) ProtoMessage() {}

func (x *GetRobotTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRobotTokenResponse.ProtoReflect.Descriptor instead.
func (*GetRobotTokenResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{37}
}

func (x *GetRobotTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RevokeAuthTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RevokeAuthTokenRequest) Reset() {
	*x = RevokeAuthTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeAuthTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAuthTokenRequest) ProtoMessage() {}

func (x *RevokeAuthTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAuthTokenRequest.ProtoReflect.Descriptor instead.
func (*RevokeAuthTokenRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{38}
}

func (x *RevokeAuthTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RevokeAuthTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeAuthTokenResponse) Reset() {
	*x = RevokeAuthTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeAuthTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAuthTokenResponse) ProtoMessage() {}

func (x *RevokeAuthTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAuthTokenResponse.ProtoReflect.Descriptor instead.
func (*RevokeAuthTokenResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{39}
}

type SetGroupsForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Groups   []string `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *SetGroupsForUserRequest) Reset() {
	*x = SetGroupsForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupsForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupsForUserRequest) ProtoMessage() {}

func (x *SetGroupsForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupsForUserRequest.ProtoReflect.Descriptor instead.
func (*SetGroupsForUserRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{40}
}

func (x *SetGroupsForUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetGroupsForUserRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type SetGroupsForUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetGroupsForUserResponse) Reset() {
	*x = SetGroupsForUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupsForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupsForUserResponse) ProtoMessage() {}

func (x *SetGroupsForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupsForUserResponse.ProtoReflect.Descriptor instead.
func (*SetGroupsForUserResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{41}
}

type ModifyMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group  string   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Add    []string `protobuf:"bytes,2,rep,name=add,proto3" json:"add,omitempty"`
	Remove []string `protobuf:"bytes,3,rep,name=remove,proto3" json:"remove,omitempty"`
}

func (x *ModifyMembersRequest) Reset() {
	*x = ModifyMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMembersRequest) ProtoMessage() {}

func (x *ModifyMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMembersRequest.ProtoReflect.Descriptor instead.
func (*ModifyMembersRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{42}
}

func (x *ModifyMembersRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ModifyMembersRequest) GetAdd() []string {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *ModifyMembersRequest) GetRemove() []string {
	if x != nil {
		return x.Remove
	}
	return nil
}

type ModifyMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyMembersResponse) Reset() {
	*x = ModifyMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMembersResponse) ProtoMessage() {}

func (x *ModifyMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMembersResponse.ProtoReflect.Descriptor instead.
func (*ModifyMembersResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{43}
}

type GetGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGroupsRequest) Reset() {
	*x = GetGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsRequest) ProtoMessage() {}

func (x *GetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{44}
}

type GetGroupsForPrincipalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Principal string `protobuf:"bytes,1,opt,name=principal,proto3" json:"principal,omitempty"`
}

func (x *GetGroupsForPrincipalRequest) Reset() {
	*x = GetGroupsForPrincipalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsForPrincipalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsForPrincipalRequest) ProtoMessage() {}

func (x *GetGroupsForPrincipalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsForPrincipalRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsForPrincipalRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{45}
}

func (x *GetGroupsForPrincipalRequest) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

type GetGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []string `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupsResponse) Reset() {
	*x = GetGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResponse) ProtoMessage() {}

func (x *GetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{46}
}

func (x *GetGroupsResponse) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{47}
}

func (x *GetUsersRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usernames []string `protobuf:"bytes,1,rep,name=usernames,proto3" json:"usernames,omitempty"`
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{48}
}

func (x *GetUsersResponse) GetUsernames() []string {
	if x != nil {
		return x.Usernames
	}
	return nil
}

// ExtractAuthTokens returns all the hashed robot tokens that have been issued.
// User tokens are not extracted as they can be recreated by logging in.
type ExtractAuthTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExtractAuthTokensRequest) Reset() {
	*x = ExtractAuthTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractAuthTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractAuthTokensRequest) ProtoMessage() {}

func (x *ExtractAuthTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractAuthTokensRequest.ProtoReflect.Descriptor instead.
func (*ExtractAuthTokensRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{49}
}

type ExtractAuthTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*TokenInfo `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *ExtractAuthTokensResponse) Reset() {
	*x = ExtractAuthTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractAuthTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractAuthTokensResponse) ProtoMessage() {}

func (x *ExtractAuthTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractAuthTokensResponse.ProtoReflect.Descriptor instead.
func (*ExtractAuthTokensResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{50}
}

func (x *ExtractAuthTokensResponse) GetTokens() []*TokenInfo {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// RestoreAuthToken inserts a hashed token that has previously been extracted.
type RestoreAuthTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *TokenInfo `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RestoreAuthTokenRequest) Reset() {
	*x = RestoreAuthTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreAuthTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreAuthTokenRequest) ProtoMessage() {}

func (x *RestoreAuthTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreAuthTokenRequest.ProtoReflect.Descriptor instead.
func (*RestoreAuthTokenRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{51}
}

func (x *RestoreAuthTokenRequest) GetToken() *TokenInfo {
	if x != nil {
		return x.Token
	}
	return nil
}

type RestoreAuthTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestoreAuthTokenResponse) Reset() {
	*x = RestoreAuthTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreAuthTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreAuthTokenResponse) ProtoMessage() {}

func (x *RestoreAuthTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreAuthTokenResponse.ProtoReflect.Descriptor instead.
func (*RestoreAuthTokenResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{52}
}

type RevokeAuthTokensForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *RevokeAuthTokensForUserRequest) Reset() {
	*x = RevokeAuthTokensForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeAuthTokensForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAuthTokensForUserRequest) ProtoMessage() {}

func (x *RevokeAuthTokensForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAuthTokensForUserRequest.ProtoReflect.Descriptor instead.
func (*RevokeAuthTokensForUserRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{53}
}

func (x *RevokeAuthTokensForUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type RevokeAuthTokensForUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeAuthTokensForUserResponse) Reset() {
	*x = RevokeAuthTokensForUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeAuthTokensForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAuthTokensForUserResponse) ProtoMessage() {}

func (x *RevokeAuthTokensForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAuthTokensForUserResponse.ProtoReflect.Descriptor instead.
func (*RevokeAuthTokensForUserResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{54}
}

type DeleteExpiredAuthTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredAuthTokensRequest) Reset() {
	*x = DeleteExpiredAuthTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredAuthTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredAuthTokensRequest) ProtoMessage() {}

func (x *DeleteExpiredAuthTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredAuthTokensRequest.ProtoReflect.Descriptor instead.
func (*DeleteExpiredAuthTokensRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{55}
}

type DeleteExpiredAuthTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredAuthTokensResponse) Reset() {
	*x = DeleteExpiredAuthTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredAuthTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredAuthTokensResponse) ProtoMessage() {}

func (x *DeleteExpiredAuthTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_auth_auth_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredAuthTokensResponse.ProtoReflect.Descriptor instead.
func (*DeleteExpiredAuthTokensResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_auth_auth_proto_rawDescGZIP(), []int{56}
}

var File_pkg_api_v1_auth_auth_proto protoreflect.FileDescriptor

var file_pkg_api_v1_auth_auth_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x76, 0x31,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x0f,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x31,
	0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x16,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x38, 0x0a, 0x17, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xe0, 0x02, 0x0a, 0x0a, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe2, 0xde, 0x1f, 0x08, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xe2, 0xde,
	0x1f, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49, 0x52, 0x0b, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x1b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x48, 0x6f,
	0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x39, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x53,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x17,
	0xf2, 0xde, 0x1f, 0x0f, 0x64, 0x62, 0x3a, 0x22, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xf2, 0xde, 0x1f, 0x0f, 0x64,
	0x62, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x52, 0x0b,
	0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5e, 0x0a, 0x13, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xde, 0x1f, 0x09, 0x4f, 0x49, 0x44, 0x43,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6f, 0x69, 0x64, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x35, 0x0a, 0x14, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x17, 0xf2, 0xde, 0x1f, 0x0f, 0x64, 0x62, 0x3a, 0x22, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x22, 0x72, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x1a, 0x4a, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x49, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x05, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x78, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x39,
	0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8f, 0x01, 0x0a, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x78, 0x0a, 0x10, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x35,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x73,
	0x61, 0x74, 0x69, 0x73, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x69, 0x65, 0x64, 0x12, 0x2d,
	0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x22, 0x46, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x70, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x22, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x18,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x60, 0x0a, 0x0b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x22, 0x15, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xe2, 0xde, 0x1f, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x52, 0x4c, 0x52, 0x08, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x74, 0x74,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xe2, 0xde, 0x1f, 0x03, 0x54, 0x54, 0x4c,
	0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2e, 0x0a, 0x16, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4d, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x1a,
	0x0a, 0x18, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x0a, 0x14, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x3c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x50,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x22, 0x2b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x30, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x47, 0x0a, 0x19, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x43, 0x0a, 0x17, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x1a, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x1e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x0a, 0x1e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x21,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2a, 0x95, 0x0f, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x12, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x55, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x53, 0x10, 0x64, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x65, 0x12,
	0x1d, 0x0a, 0x18, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x53, 0x56, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x53, 0x10, 0x94, 0x01, 0x12, 0x19,
	0x0a, 0x15, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x66, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x55,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x44, 0x45, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x41, 0x54, 0x45, 0x10, 0x67, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x10, 0x68, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x69,
	0x12, 0x21, 0x0a, 0x1c, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48,
	0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x10, 0x8b, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x10, 0x6d, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x53, 0x10, 0x6e, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4c, 0x55, 0x53, 0x54,
	0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x10, 0x6f, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x55,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x43,
	0x54, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x53, 0x10, 0x70, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x71, 0x12, 0x2f, 0x0a, 0x2a, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x50,
	0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50,
	0x52, 0x49, 0x4e, 0x43, 0x49, 0x50, 0x41, 0x4c, 0x10, 0x8d, 0x01, 0x12, 0x27, 0x0a, 0x22, 0x43,
	0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x53, 0x10, 0x8c, 0x01, 0x12, 0x24, 0x0a, 0x1f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f,
	0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x53, 0x10, 0x8e, 0x01, 0x12, 0x23, 0x0a, 0x1e, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x4f, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x93, 0x01, 0x12,
	0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52,
	0x50, 0x52, 0x49, 0x53, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x72,
	0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x45,
	0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54,
	0x10, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x4e,
	0x54, 0x45, 0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x10, 0x74, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x45,
	0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x5f, 0x44, 0x45, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x41, 0x54, 0x45, 0x10, 0x75, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x5f, 0x50, 0x41, 0x55,
	0x53, 0x45, 0x10, 0x95, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x10, 0x76, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x77, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x55, 0x53, 0x54,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x49, 0x44, 0x50, 0x10, 0x78, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x55, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x50, 0x10, 0x79, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4c, 0x55,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x5f, 0x49, 0x44, 0x50, 0x53, 0x10, 0x7a, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4c, 0x55,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x49, 0x44, 0x50, 0x10, 0x7b, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x55, 0x53, 0x54,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x5f, 0x49, 0x44, 0x50, 0x10, 0x7c, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x4c, 0x55, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x5f, 0x4f, 0x49, 0x44, 0x43, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x7d, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x49, 0x44,
	0x43, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x7e, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x4f, 0x49, 0x44, 0x43, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x53,
	0x10, 0x7f, 0x12, 0x25, 0x0a, 0x20, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x49, 0x44, 0x43, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x80, 0x01, 0x12, 0x28, 0x0a, 0x23, 0x43, 0x4c, 0x55,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4f, 0x49, 0x44, 0x43, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x81, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x44,
	0x45, 0x42, 0x55, 0x47, 0x5f, 0x44, 0x55, 0x4d, 0x50, 0x10, 0x83, 0x01, 0x12, 0x1d, 0x0a, 0x18,
	0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x84, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x43,
	0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x5f, 0x47,
	0x45, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x85, 0x01, 0x12, 0x20, 0x0a, 0x1b, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x5f, 0x41, 0x44,
	0x44, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x10, 0x86, 0x01, 0x12, 0x23, 0x0a, 0x1e,
	0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x10, 0x87,
	0x01, 0x12, 0x23, 0x0a, 0x1e, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x43,
	0x45, 0x4e, 0x53, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x43, 0x4c, 0x55, 0x53,
	0x54, 0x45, 0x52, 0x10, 0x88, 0x01, 0x12, 0x22, 0x0a, 0x1d, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x43,
	0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x53, 0x10, 0x89, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x43,
	0x52, 0x45, 0x54, 0x10, 0x8f, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x53, 0x10, 0x90,
	0x01, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x91, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f,
	0x49, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x54, 0x10, 0x92, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41, 0x4c, 0x4c,
	0x10, 0x8a, 0x01, 0x12, 0x0e, 0x0a, 0x09, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x10, 0xc8, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x57, 0x52, 0x49, 0x54,
	0x45, 0x10, 0xc9, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x4d, 0x4f, 0x44,
	0x49, 0x46, 0x59, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x53, 0x10, 0xca, 0x01, 0x12,
	0x10, 0x0a, 0x0b, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xcb,
	0x01, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x49, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0xcc, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x52,
	0x45, 0x50, 0x4f, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10,
	0xcd, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0xce, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x52,
	0x45, 0x50, 0x4f, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43,
	0x48, 0x10, 0xcf, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x10, 0xd0, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x52,
	0x45, 0x50, 0x4f, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43,
	0x48, 0x10, 0xd1, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x49, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0xd2, 0x01, 0x12, 0x13, 0x0a, 0x0e,
	0x52, 0x45, 0x50, 0x4f, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0xd3,
	0x01, 0x12, 0x1d, 0x0a, 0x18, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x50, 0x49,
	0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0xd4, 0x01,
	0x12, 0x20, 0x0a, 0x1b, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f,
	0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10,
	0xd5, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x50,
	0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x52, 0x10, 0xd6,
	0x01, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x5f, 0x4a, 0x4f, 0x42, 0x10, 0xad, 0x02, 0x2a, 0x4f, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x50, 0x4f, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x50, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x10, 0x03, 0x32, 0xf6, 0x10, 0x0a, 0x03, 0x41,
	0x50, 0x49, 0x12, 0x41, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x44, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x46, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x2a, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x57,
	0x68, 0x6f, 0x41, 0x6d, 0x49, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x49, 0x44, 0x43, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x17, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f,
	0x72, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x25, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x6f,
	0x72, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x62, 0x68, 0x6f, 0x6a, 0x70, 0x75, 0x72, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x3b, 0x61,
	0x75, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_v1_auth_auth_proto_rawDescOnce sync.Once
	file_pkg_api_v1_auth_auth_proto_rawDescData = file_pkg_api_v1_auth_auth_proto_rawDesc
)

func file_pkg_api_v1_auth_auth_proto_rawDescGZIP() []byte {
	file_pkg_api_v1_auth_auth_proto_rawDescOnce.Do(func() {
		file_pkg_api_v1_auth_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_v1_auth_auth_proto_rawDescData)
	})
	return file_pkg_api_v1_auth_auth_proto_rawDescData
}

var file_pkg_api_v1_auth_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_api_v1_auth_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_pkg_api_v1_auth_auth_proto_goTypes = []interface{}{
	(Permission)(0),                           // 0: v1.auth.Permission
	(ResourceType)(0),                         // 1: v1.auth.ResourceType
	(*ActivateRequest)(nil),                   // 2: v1.auth.ActivateRequest
	(*ActivateResponse)(nil),                  // 3: v1.auth.ActivateResponse
	(*DeactivateRequest)(nil),                 // 4: v1.auth.DeactivateRequest
	(*DeactivateResponse)(nil),                // 5: v1.auth.DeactivateResponse
	(*RotateRootTokenRequest)(nil),            // 6: v1.auth.RotateRootTokenRequest
	(*RotateRootTokenResponse)(nil),           // 7: v1.auth.RotateRootTokenResponse
	(*OIDCConfig)(nil),                        // 8: v1.auth.OIDCConfig
	(*GetConfigurationRequest)(nil),           // 9: v1.auth.GetConfigurationRequest
	(*GetConfigurationResponse)(nil),          // 10: v1.auth.GetConfigurationResponse
	(*SetConfigurationRequest)(nil),           // 11: v1.auth.SetConfigurationRequest
	(*SetConfigurationResponse)(nil),          // 12: v1.auth.SetConfigurationResponse
	(*TokenInfo)(nil),                         // 13: v1.auth.TokenInfo
	(*AuthenticateRequest)(nil),               // 14: v1.auth.AuthenticateRequest
	(*AuthenticateResponse)(nil),              // 15: v1.auth.AuthenticateResponse
	(*WhoAmIRequest)(nil),                     // 16: v1.auth.WhoAmIRequest
	(*WhoAmIResponse)(nil),                    // 17: v1.auth.WhoAmIResponse
	(*GetRolesForPermissionRequest)(nil),      // 18: v1.auth.GetRolesForPermissionRequest
	(*GetRolesForPermissionResponse)(nil),     // 19: v1.auth.GetRolesForPermissionResponse
	(*Roles)(nil),                             // 20: v1.auth.Roles
	(*RoleBinding)(nil),                       // 21: v1.auth.RoleBinding
	(*Resource)(nil),                          // 22: v1.auth.Resource
	(*Users)(nil),                             // 23: v1.auth.Users
	(*Groups)(nil),                            // 24: v1.auth.Groups
	(*Role)(nil),                              // 25: v1.auth.Role
	(*AuthorizeRequest)(nil),                  // 26: v1.auth.AuthorizeRequest
	(*AuthorizeResponse)(nil),                 // 27: v1.auth.AuthorizeResponse
	(*GetPermissionsRequest)(nil),             // 28: v1.auth.GetPermissionsRequest
	(*GetPermissionsForPrincipalRequest)(nil), // 29: v1.auth.GetPermissionsForPrincipalRequest
	(*GetPermissionsResponse)(nil),            // 30: v1.auth.GetPermissionsResponse
	(*ModifyRoleBindingRequest)(nil),          // 31: v1.auth.ModifyRoleBindingRequest
	(*ModifyRoleBindingResponse)(nil),         // 32: v1.auth.ModifyRoleBindingResponse
	(*GetRoleBindingRequest)(nil),             // 33: v1.auth.GetRoleBindingRequest
	(*GetRoleBindingResponse)(nil),            // 34: v1.auth.GetRoleBindingResponse
	(*SessionInfo)(nil),                       // 35: v1.auth.SessionInfo
	(*GetOIDCLoginRequest)(nil),               // 36: v1.auth.GetOIDCLoginRequest
	(*GetOIDCLoginResponse)(nil),              // 37: v1.auth.GetOIDCLoginResponse
	(*GetRobotTokenRequest)(nil),              // 38: v1.auth.GetRobotTokenRequest
	(*GetRobotTokenResponse)(nil),             // 39: v1.auth.GetRobotTokenResponse
	(*RevokeAuthTokenRequest)(nil),            // 40: v1.auth.RevokeAuthTokenRequest
	(*RevokeAuthTokenResponse)(nil),           // 41: v1.auth.RevokeAuthTokenResponse
	(*SetGroupsForUserRequest)(nil),           // 42: v1.auth.SetGroupsForUserRequest
	(*SetGroupsForUserResponse)(nil),          // 43: v1.auth.SetGroupsForUserResponse
	(*ModifyMembersRequest)(nil),              // 44: v1.auth.ModifyMembersRequest
	(*ModifyMembersResponse)(nil),             // 45: v1.auth.ModifyMembersResponse
	(*GetGroupsRequest)(nil),                  // 46: v1.auth.GetGroupsRequest
	(*GetGroupsForPrincipalRequest)(nil),      // 47: v1.auth.GetGroupsForPrincipalRequest
	(*GetGroupsResponse)(nil),                 // 48: v1.auth.GetGroupsResponse
	(*GetUsersRequest)(nil),                   // 49: v1.auth.GetUsersRequest
	(*GetUsersResponse)(nil),                  // 50: v1.auth.GetUsersResponse
	(*ExtractAuthTokensRequest)(nil),          // 51: v1.auth.ExtractAuthTokensRequest
	(*ExtractAuthTokensResponse)(nil),         // 52: v1.auth.ExtractAuthTokensResponse
	(*RestoreAuthTokenRequest)(nil),           // 53: v1.auth.RestoreAuthTokenRequest
	(*RestoreAuthTokenResponse)(nil),          // 54: v1.auth.RestoreAuthTokenResponse
	(*RevokeAuthTokensForUserRequest)(nil),    // 55: v1.auth.RevokeAuthTokensForUserRequest
	(*RevokeAuthTokensForUserResponse)(nil),   // 56: v1.auth.RevokeAuthTokensForUserResponse
	(*DeleteExpiredAuthTokensRequest)(nil),    // 57: v1.auth.DeleteExpiredAuthTokensRequest
	(*DeleteExpiredAuthTokensResponse)(nil),   // 58: v1.auth.DeleteExpiredAuthTokensResponse
	nil,                                       // 59: v1.auth.Roles.RolesEntry
	nil,                                       // 60: v1.auth.RoleBinding.EntriesEntry
	nil,                                       // 61: v1.auth.Users.UsernamesEntry
	nil,                                       // 62: v1.auth.Groups.GroupsEntry
	(*timestamppb.Timestamp)(nil),             // 63: google.protobuf.Timestamp
}
var file_pkg_api_v1_auth_auth_proto_depIdxs = []int32{
	8,  // 0: v1.auth.GetConfigurationResponse.configuration:type_name -> v1.auth.OIDCConfig
	8,  // 1: v1.auth.SetConfigurationRequest.configuration:type_name -> v1.auth.OIDCConfig
	63, // 2: v1.auth.TokenInfo.expiration:type_name -> google.protobuf.Timestamp
	63, // 3: v1.auth.WhoAmIResponse.expiration:type_name -> google.protobuf.Timestamp
	0,  // 4: v1.auth.GetRolesForPermissionRequest.permission:type_name -> v1.auth.Permission
	25, // 5: v1.auth.GetRolesForPermissionResponse.roles:type_name -> v1.auth.Role
	59, // 6: v1.auth.Roles.roles:type_name -> v1.auth.Roles.RolesEntry
	60, // 7: v1.auth.RoleBinding.entries:type_name -> v1.auth.RoleBinding.EntriesEntry
	1,  // 8: v1.auth.Resource.type:type_name -> v1.auth.ResourceType
	61, // 9: v1.auth.Users.usernames:type_name -> v1.auth.Users.UsernamesEntry
	62, // 10: v1.auth.Groups.groups:type_name -> v1.auth.Groups.GroupsEntry
	0,  // 11: v1.auth.Role.permissions:type_name -> v1.auth.Permission
	1,  // 12: v1.auth.Role.resource_types:type_name -> v1.auth.ResourceType
	22, // 13: v1.auth.AuthorizeRequest.resource:type_name -> v1.auth.Resource
	0,  // 14: v1.auth.AuthorizeRequest.permissions:type_name -> v1.auth.Permission
	0,  // 15: v1.auth.AuthorizeResponse.satisfied:type_name -> v1.auth.Permission
	0,  // 16: v1.auth.AuthorizeResponse.missing:type_name -> v1.auth.Permission
	22, // 17: v1.auth.GetPermissionsRequest.resource:type_name -> v1.auth.Resource
	22, // 18: v1.auth.GetPermissionsForPrincipalRequest.resource:type_name -> v1.auth.Resource
	0,  // 19: v1.auth.GetPermissionsResponse.permissions:type_name -> v1.auth.Permission
	22, // 20: v1.auth.ModifyRoleBindingRequest.resource:type_name -> v1.auth.Resource
	22, // 21: v1.auth.GetRoleBindingRequest.resource:type_name -> v1.auth.Resource
	21, // 22: v1.auth.GetRoleBindingResponse.binding:type_name -> v1.auth.RoleBinding
	13, // 23: v1.auth.ExtractAuthTokensResponse.tokens:type_name -> v1.auth.TokenInfo
	13, // 24: v1.auth.RestoreAuthTokenRequest.token:type_name -> v1.auth.TokenInfo
	20, // 25: v1.auth.RoleBinding.EntriesEntry.value:type_name -> v1.auth.Roles
	2,  // 26: v1.auth.API.Activate:input_type -> v1.auth.ActivateRequest
	4,  // 27: v1.auth.API.Deactivate:input_type -> v1.auth.DeactivateRequest
	9,  // 28: v1.auth.API.GetConfiguration:input_type -> v1.auth.GetConfigurationRequest
	11, // 29: v1.auth.API.SetConfiguration:input_type -> v1.auth.SetConfigurationRequest
	14, // 30: v1.auth.API.Authenticate:input_type -> v1.auth.AuthenticateRequest
	26, // 31: v1.auth.API.Authorize:input_type -> v1.auth.AuthorizeRequest
	28, // 32: v1.auth.API.GetPermissions:input_type -> v1.auth.GetPermissionsRequest
	29, // 33: v1.auth.API.GetPermissionsForPrincipal:input_type -> v1.auth.GetPermissionsForPrincipalRequest
	16, // 34: v1.auth.API.WhoAmI:input_type -> v1.auth.WhoAmIRequest
	18, // 35: v1.auth.API.GetRolesForPermission:input_type -> v1.auth.GetRolesForPermissionRequest
	31, // 36: v1.auth.API.ModifyRoleBinding:input_type -> v1.auth.ModifyRoleBindingRequest
	33, // 37: v1.auth.API.GetRoleBinding:input_type -> v1.auth.GetRoleBindingRequest
	36, // 38: v1.auth.API.GetOIDCLogin:input_type -> v1.auth.GetOIDCLoginRequest
	38, // 39: v1.auth.API.GetRobotToken:input_type -> v1.auth.GetRobotTokenRequest
	40, // 40: v1.auth.API.RevokeAuthToken:input_type -> v1.auth.RevokeAuthTokenRequest
	55, // 41: v1.auth.API.RevokeAuthTokensForUser:input_type -> v1.auth.RevokeAuthTokensForUserRequest
	42, // 42: v1.auth.API.SetGroupsForUser:input_type -> v1.auth.SetGroupsForUserRequest
	44, // 43: v1.auth.API.ModifyMembers:input_type -> v1.auth.ModifyMembersRequest
	46, // 44: v1.auth.API.GetGroups:input_type -> v1.auth.GetGroupsRequest
	47, // 45: v1.auth.API.GetGroupsForPrincipal:input_type -> v1.auth.GetGroupsForPrincipalRequest
	49, // 46: v1.auth.API.GetUsers:input_type -> v1.auth.GetUsersRequest
	51, // 47: v1.auth.API.ExtractAuthTokens:input_type -> v1.auth.ExtractAuthTokensRequest
	53, // 48: v1.auth.API.RestoreAuthToken:input_type -> v1.auth.RestoreAuthTokenRequest
	57, // 49: v1.auth.API.DeleteExpiredAuthTokens:input_type -> v1.auth.DeleteExpiredAuthTokensRequest
	6,  // 50: v1.auth.API.RotateRootToken:input_type -> v1.auth.RotateRootTokenRequest
	3,  // 51: v1.auth.API.Activate:output_type -> v1.auth.ActivateResponse
	5,  // 52: v1.auth.API.Deactivate:output_type -> v1.auth.DeactivateResponse
	10, // 53: v1.auth.API.GetConfiguration:output_type -> v1.auth.GetConfigurationResponse
	12, // 54: v1.auth.API.SetConfiguration:output_type -> v1.auth.SetConfigurationResponse
	15, // 55: v1.auth.API.Authenticate:output_type -> v1.auth.AuthenticateResponse
	27, // 56: v1.auth.API.Authorize:output_type -> v1.auth.AuthorizeResponse
	30, // 57: v1.auth.API.GetPermissions:output_type -> v1.auth.GetPermissionsResponse
	30, // 58: v1.auth.API.GetPermissionsForPrincipal:output_type -> v1.auth.GetPermissionsResponse
	17, // 59: v1.auth.API.WhoAmI:output_type -> v1.auth.WhoAmIResponse
	19, // 60: v1.auth.API.GetRolesForPermission:output_type -> v1.auth.GetRolesForPermissionResponse
	32, // 61: v1.auth.API.ModifyRoleBinding:output_type -> v1.auth.ModifyRoleBindingResponse
	34, // 62: v1.auth.API.GetRoleBinding:output_type -> v1.auth.GetRoleBindingResponse
	37, // 63: v1.auth.API.GetOIDCLogin:output_type -> v1.auth.GetOIDCLoginResponse
	39, // 64: v1.auth.API.GetRobotToken:output_type -> v1.auth.GetRobotTokenResponse
	41, // 65: v1.auth.API.RevokeAuthToken:output_type -> v1.auth.RevokeAuthTokenResponse
	56, // 66: v1.auth.API.RevokeAuthTokensForUser:output_type -> v1.auth.RevokeAuthTokensForUserResponse
	43, // 67: v1.auth.API.SetGroupsForUser:output_type -> v1.auth.SetGroupsForUserResponse
	45, // 68: v1.auth.API.ModifyMembers:output_type -> v1.auth.ModifyMembersResponse
	48, // 69: v1.auth.API.GetGroups:output_type -> v1.auth.GetGroupsResponse
	48, // 70: v1.auth.API.GetGroupsForPrincipal:output_type -> v1.auth.GetGroupsResponse
	50, // 71: v1.auth.API.GetUsers:output_type -> v1.auth.GetUsersResponse
	52, // 72: v1.auth.API.ExtractAuthTokens:output_type -> v1.auth.ExtractAuthTokensResponse
	54, // 73: v1.auth.API.RestoreAuthToken:output_type -> v1.auth.RestoreAuthTokenResponse
	58, // 74: v1.auth.API.DeleteExpiredAuthTokens:output_type -> v1.auth.DeleteExpiredAuthTokensResponse
	7,  // 75: v1.auth.API.RotateRootToken:output_type -> v1.auth.RotateRootTokenResponse
	51, // [51:76] is the sub-list for method output_type
	26, // [26:51] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_pkg_api_v1_auth_auth_proto_init() }
func file_pkg_api_v1_auth_auth_proto_init() {
	if File_pkg_api_v1_auth_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_v1_auth_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RotateRootTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RotateRootTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDCConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoAmIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoAmIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesForPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesForPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Roles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Groups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsForPrincipalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyRoleBindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyRoleBindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleBindingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleBindingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOIDCLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOIDCLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRobotTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRobotTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeAuthTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeAuthTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupsForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupsForUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsForPrincipalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractAuthTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractAuthTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreAuthTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreAuthTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeAuthTokensForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeAuthTokensForUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredAuthTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_auth_auth_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredAuthTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_v1_auth_auth_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_api_v1_auth_auth_proto_goTypes,
		DependencyIndexes: file_pkg_api_v1_auth_auth_proto_depIdxs,
		EnumInfos:         file_pkg_api_v1_auth_auth_proto_enumTypes,
		MessageInfos:      file_pkg_api_v1_auth_auth_proto_msgTypes,
	}.Build()
	File_pkg_api_v1_auth_auth_proto = out.File
	file_pkg_api_v1_auth_auth_proto_rawDesc = nil
	file_pkg_api_v1_auth_auth_proto_goTypes = nil
	file_pkg_api_v1_auth_auth_proto_depIdxs = nil
}
